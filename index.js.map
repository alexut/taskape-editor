{
  "version": 3,
  "sources": ["../../node_modules/eventemitter3/index.js", "src/tree.js", "src/utils.js", "src/indicator.js", "src/input.js", "src/defaults.js", "src/clicked.js", "src/leaf.js", "src/editor.js", "src/init.js"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "'use strict';\r\n\r\nimport Events from 'eventemitter3';\r\nimport { Input } from './input';\r\nimport { defaults } from './defaults';\r\nimport { Leaf } from './leaf';\r\nimport { TaskEditor } from './editor';\r\nimport * as utils from './utils';\r\n\r\nexport class Tree extends Events {\r\n    constructor(tree, options) {\r\n        super();\r\n        this._options = utils.options(options, defaults);\r\n        this._input = new Input(this);\r\n        this.taskEditor = new TaskEditor(this);\r\n        if (typeof this._options.element === 'undefined') {\r\n            this.element = document.createElement('div');\r\n        } else {\r\n            this.element = utils.el(this._options.element);\r\n        }\r\n        if (this._options.parent) {\r\n            utils.el(this._options.parent).appendChild(this.element);\r\n        }\r\n        this.element.classList.add(this.prefixClassName);\r\n        this.element.data = tree;\r\n        this.update();\r\n    }\r\n\r\n    get selection() {\r\n        return this._selection.data;\r\n    }\r\n    set selection(data) {}\r\n\r\n    get prefixClassName() {\r\n        return this._options.prefixClassName;\r\n    }\r\n    set prefixClassName(value) {\r\n        if (value !== this._options.prefixClassName) {\r\n            this._options.prefixClassName = value;\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    get indentation() {\r\n        return this._options.indentation;\r\n    }\r\n    set indentation(value) {\r\n        if (value !== this._options.indentation) {\r\n            this._options.indentation = value;\r\n            this._input._indicatorMarginLeft = value + 'px';\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    get holdTime() {\r\n        return this._options.holdTime;\r\n    }\r\n    set holdTime(value) {\r\n        if (value !== this._options.holdTime) {\r\n            this._options.holdTime = value;\r\n        }\r\n    }\r\n\r\n    get move() {\r\n        return this._options.move;\r\n    }\r\n    set move(value) {\r\n        this._options.move = value;\r\n    }\r\n\r\n    get expandOnClick() {\r\n        return this._options.expandOnClick;\r\n    }\r\n    set expandOnClick(value) {\r\n        this._options.expandOnClick = value;\r\n    }\r\n\r\n    get select() {\r\n        return this._options.select;\r\n    }\r\n    set select(value) {\r\n        this._options.select = value;\r\n    }\r\n\r\n    get dragOpacity() {\r\n        return this._options.dragOpacity;\r\n    }\r\n    set dragOpacity(value) {\r\n        this._options.dragOpacity = value;\r\n    }\r\n\r\n    expandAll() {\r\n        this._expandChildren(this.element);\r\n    }\r\n\r\n    _expandChildren(leaf) {\r\n        for (let child of this._getChildren(leaf, true)) {\r\n            this.expand(child);\r\n            this._expandChildren(child);\r\n        }\r\n    }\r\n\r\n    collapseAll() {\r\n        this._collapseChildren(this.element);\r\n    }\r\n\r\n    _collapseChildren(leaf) {\r\n        for (let child of this._getChildren(leaf, true)) {\r\n            this.collapse(child);\r\n            this._collapseChildren(child);\r\n        }\r\n    }\r\n\r\n    toggleExpand(leaf) {\r\n        if (!leaf.icon.classList.contains('hidden')) {\r\n            if (leaf.data.expanded) {\r\n                this.collapse(leaf);\r\n            } else {\r\n                this.expand(leaf);\r\n            }\r\n        }\r\n    }\r\n\r\n    expand(leaf) {\r\n        if (leaf.isLeaf) {\r\n            const children = this._getChildren(leaf, true);\r\n            if (children.length) {\r\n                for (let child of children) {\r\n                    child.style.display = 'block';\r\n                }\r\n                leaf.data.expanded = true;\r\n                leaf.icon.classList.add('expanded');\r\n                this.emit('expand', leaf, this);\r\n                this.emit('update', leaf, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    collapse(leaf) {\r\n        if (leaf.isLeaf) {\r\n            const children = this._getChildren(leaf, true);\r\n            if (children.length) {\r\n                for (let child of children) {\r\n                    child.style.display = 'none';\r\n                }\r\n                leaf.data.expanded = false;\r\n                leaf.icon.classList.remove('expanded');\r\n                this.emit('collapse', leaf, this);\r\n                this.emit('update', leaf, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        const scroll = this.element.scrollTop;\r\n        utils.removeChildren(this.element);\r\n        for (let leaf of this.element.data.task) {\r\n            const add = new Leaf(leaf, 0, this);\r\n            add.data.parent = this.element.data;\r\n            add.element.__leafInstance = add;\r\n            this.element.appendChild(add.element);\r\n        }\r\n        this.element.scrollTop = scroll + 'px';\r\n    }\r\n\r\n    editData(data) {\r\n        const children = this._getChildren(null, true);\r\n        for (let child of children) {\r\n            if (child.data === data) {\r\n                child.querySelector(`.${this.prefixClassName}-name`).setAttribute('contenteditable', true);\r\n                child.querySelector(`.${this.prefixClassName}-name`).focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    getLeaf(leaf, root = this.element) {\r\n        this.findInTree(root, data => data === leaf);\r\n    }\r\n\r\n    findInTree(leaf, callback) {\r\n        for (const child of leaf.children) {\r\n            if (callback(child)) {\r\n                return child;\r\n            }\r\n            const find = this.findInTree(child, callback);\r\n            if (find) {\r\n                return find;\r\n            }\r\n        }\r\n    }\r\n\r\n    _getFirstChild(element, all) {\r\n        const children = this._getChildren(element, all);\r\n        if (children.length) {\r\n            return children[0];\r\n        }\r\n    }\r\n\r\n    _getLastChild(element, all) {\r\n        const children = this._getChildren(element, all);\r\n        if (children.length) {\r\n            return children[children.length - 1];\r\n        }\r\n    }\r\n\r\n    _getParent(element) {\r\n        element = element.parentNode;\r\n        while (element.style.display === 'none') {\r\n            element = element.parentNode;\r\n        }\r\n        return element;\r\n    }\r\n\r\n    _getChildren(leaf, all) {\r\n        leaf = leaf || this.element;\r\n        const children = [];\r\n        for (let child of leaf.children) {\r\n            if (child.isLeaf && (all || child.style.display !== 'none')) {\r\n                children.push(child);\r\n            }\r\n        }\r\n        return children;\r\n    }\r\n}\r\n", "/**\r\n * converts a string to an HTMLElement if necessary\r\n * @param {(HTMLElement|string)} element\r\n */\r\nexport function el(element) {\r\n    if (typeof element === 'string') {\r\n        return document.querySelector(element)\r\n    }\r\n    return element\r\n\r\n}\r\n\r\n/**\r\n * measure distance between two points\r\n * @param {number} x1\r\n * @param {number} y1\r\n * @param {number} x2\r\n * @param {number} y2\r\n */\r\nexport function distance(x1, y1, x2, y2) {\r\n    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\r\n}\r\n\r\n/**\r\n * find shortest distance from point to HTMLElement's bounding box\r\n * from: https://gamedev.stackexchange.com/questions/44483/how-do-i-calculate-distance-between-a-point-and-an-axis-aligned-rectangle\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {HTMLElement} element\r\n */\r\nexport function distancePointElement(px, py, element) {\r\n    const pos = toGlobal(element)\r\n    const width = element.offsetWidth\r\n    const height = element.offsetHeight\r\n    const x = pos.x + width / 2\r\n    const y = pos.y + height / 2\r\n    const dx = Math.max(Math.abs(px - x) - width / 2, 0)\r\n    const dy = Math.max(Math.abs(py - y) - height / 2, 0)\r\n    return dx * dx + dy * dy\r\n}\r\n\r\n/**\r\n * determine whether the mouse is inside an element\r\n * @param {HTMLElement} dragging\r\n * @param {HTMLElement} element\r\n */\r\nexport function inside(x, y, element) {\r\n    const pos = toGlobal(element)\r\n    const x1 = pos.x\r\n    const y1 = pos.y\r\n    const w1 = element.offsetWidth\r\n    const h1 = element.offsetHeight\r\n    return x >= x1 && x <= x1 + w1 && y >= y1 && y <= y1 + h1\r\n}\r\n\r\n/**\r\n * determines global location of a div\r\n * from https://stackoverflow.com/a/26230989/1955997\r\n * @param {HTMLElement} e\r\n * @returns {PointLike}\r\n */\r\nexport function toGlobal(e) {\r\n    const box = e.getBoundingClientRect()\r\n\r\n    const body = document.body\r\n    const docEl = document.documentElement\r\n\r\n    const scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop\r\n    const scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft\r\n\r\n    const clientTop = docEl.clientTop || body.clientTop || 0\r\n    const clientLeft = docEl.clientLeft || body.clientLeft || 0\r\n\r\n    const top = box.top + scrollTop - clientTop\r\n    const left = box.left + scrollLeft - clientLeft\r\n\r\n    return { y: Math.round(top), x: Math.round(left) }\r\n}\r\n\r\n/**\r\n * @typedef {object} PointLike\r\n * @property {number} x\r\n * @property {number} y\r\n */\r\n\r\n/**\r\n * combines options and default options\r\n * @param {object} options\r\n * @param {object} defaults\r\n * @returns {object} options+defaults\r\n */\r\nexport function options(options, defaults) {\r\n    options = options || {}\r\n    for (let option in defaults) {\r\n        options[option] = typeof options[option] !== 'undefined' ? options[option] : defaults[option]\r\n    }\r\n    return options\r\n}\r\n\r\n/**\r\n * set a style on an element\r\n * @param {HTMLElement} element\r\n * @param {string} style\r\n * @param {(string|string[])} value - single value or list of possible values (test each one in order to see if it works)\r\n */\r\nexport function style(element, style, value) {\r\n    if (Array.isArray(value)) {\r\n        for (let entry of value) {\r\n            element.style[style] = entry\r\n            if (element.style[style] === entry) {\r\n                break\r\n            }\r\n        }\r\n    } else {\r\n        element.style[style] = value\r\n    }\r\n}\r\n\r\n/**\r\n * calculate percentage of overlap between two boxes\r\n * from https://stackoverflow.com/a/21220004/1955997\r\n * @param {number} xa1\r\n * @param {number} ya1\r\n * @param {number} xa2\r\n * @param {number} xa2\r\n * @param {number} xb1\r\n * @param {number} yb1\r\n * @param {number} xb2\r\n * @param {number} yb2\r\n */\r\nexport function percentage(xa1, ya1, xa2, ya2, xb1, yb1, xb2, yb2) {\r\n    const sa = (xa2 - xa1) * (ya2 - ya1)\r\n    const sb = (xb2 - xb1) * (yb2 - yb1)\r\n    const si = Math.max(0, Math.min(xa2, xb2) - Math.max(xa1, xb1)) * Math.max(0, Math.min(ya2, yb2) - Math.max(ya1, yb1))\r\n    const union = sa + sb - si\r\n    if (union !== 0) {\r\n        return si / union\r\n    } else {\r\n        return 0\r\n    }\r\n}\r\n\r\nexport function removeChildren(element) {\r\n    while (element.firstChild) {\r\n        element.firstChild.remove()\r\n    }\r\n}\r\n\r\n'use strict';\r\n\r\nexport function html(options) {\r\n    options = options || {};\r\n    const object = document.createElement(options.type || 'div');\r\n    if (options.parent) {\r\n        options.parent.appendChild(object);\r\n    }\r\n    if (options.className) {\r\n        options.className.split(' ').forEach(cls => object.classList.add(cls));\r\n    }\r\n    if (options.html) {\r\n        object.innerHTML = options.html;\r\n    }\r\n    if (options.id) {\r\n        object.id = options.id;\r\n    }\r\n    if (options.attributes) {\r\n        for (const key in options.attributes) {\r\n            object.setAttribute(key, options.attributes[key]);\r\n        }\r\n    }\r\n    return object;\r\n}\r\n\r\n\r\nexport function getChildIndex(parent, child) {\r\n    let index = 0\r\n    for (let entry of parent.children) {\r\n        if (entry === child) {\r\n            return index\r\n        }\r\n        index++\r\n    }\r\n    return -1\r\n}\r\n\r\nexport function attachStyles(styles) {\r\n    const s = document.createElement('style')\r\n    s.innerHTML = styles\r\n    document.head.appendChild(s)\r\n}", "import * as utils from './utils';\r\n\r\nexport class Indicator {\r\n    constructor(tree) {\r\n        this._indicator = utils.html();\r\n        this._indicator.style.marginLeft = tree.indentation + 'px';\r\n        const content = utils.html({ parent: this._indicator });\r\n        content.style.display = 'flex';\r\n        this._indicator.indentation = utils.html({ parent: content });\r\n        this._indicator.icon = utils.html({ parent: content, className: `${tree.prefixClassName}-expand` });\r\n        this._indicator.icon.style.height = 0;\r\n        this._indicator.line = utils.html({ parent: content, className: `${tree.prefixClassName}-indicator` });\r\n    }\r\n\r\n    get() {\r\n        return this._indicator;\r\n    }\r\n\r\n    set marginLeft(value) {\r\n        this._indicator.style.marginLeft = value + 'px';\r\n    }\r\n}\r\n", "'use strict';\r\n\r\nimport * as utils from './utils';\r\nimport { Indicator } from './indicator';\r\n\r\nexport class Input {\r\n    constructor(tree) {\r\n        this._tree = tree;\r\n        this._indicator = new Indicator(tree);\r\n        document.body.addEventListener('mousemove', e => this._move(e));\r\n        document.body.addEventListener('touchmove', e => this._move(e));\r\n        document.body.addEventListener('mouseup', e => this._up(e));\r\n        document.body.addEventListener('touchend', e => this._up(e));\r\n        document.body.addEventListener('mouseleave', e => this._up(e));\r\n    }\r\n\r\n    _down(e) {\r\n        if (e.target.classList.contains(`${this._tree.prefixClassName}-leaf-handler`)) {\r\n            // Start drag and drop\r\n            this._target = e.currentTarget.parentNode.parentNode;\r\n            let alreadySelected = false;\r\n            if (this._tree._selection === this._target) {\r\n                alreadySelected = true;\r\n            } else {\r\n                if (this._tree._selection) {\r\n                    this._tree._selection.querySelector(`.${this._tree.prefixClassName}-name`).classList.remove(`${this._tree.prefixClassName}-select`);\r\n                }\r\n                this._tree._selection = this._target;\r\n                this._tree._selection.querySelector(`.${this._tree.prefixClassName}-name`).classList.add(`${this._tree.prefixClassName}-select`);\r\n            }\r\n            this._isDown = { x: e.pageX, y: e.pageY, alreadySelected };\r\n            const pos = utils.toGlobal(this._target);\r\n            this._offset = { x: e.pageX - pos.x, y: e.pageY - pos.y };\r\n            if (this._tree.holdTime) {\r\n                this._holdTimeout = window.setTimeout(() => this._hold(), this._tree.holdTime);\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        } else {\r\n            // Handle selection\r\n            this._target = e.currentTarget.parentNode.parentNode;\r\n            if (this._tree._selection !== this._target) {\r\n                if (this._tree._selection) {\r\n                    this._tree._selection.querySelector(`.${this._tree.prefixClassName}-name`).classList.remove(`${this._tree.prefixClassName}-select`);\r\n                }\r\n                this._tree._selection = this._target;\r\n                this._tree._selection.querySelector(`.${this._tree.prefixClassName}-name`).classList.add(`${this._tree.prefixClassName}-select`);\r\n                this._tree.emit('selection-change', this._target, this._tree);\r\n            }\r\n        }\r\n    }\r\n\r\n    _hold() {\r\n        this._holdTimeout = null;\r\n        this._tree.edit(this._target);\r\n    }\r\n\r\n    _checkThreshold(e) {\r\n        if (!this._isDown) {\r\n            return false;\r\n        }\r\n        if (!this._tree.move) {\r\n            return false;\r\n        } else if (this._moving) {\r\n            return true;\r\n        } else {\r\n            if (utils.distance(this._isDown.x, this._isDown.y, e.pageX, e.pageY)) {\r\n                this._moving = true;\r\n                this._pickup();\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    _pickup() {\r\n        if (this._holdTimeout) {\r\n            window.clearTimeout(this._holdTimeout);\r\n            this._holdTimeout = null;\r\n        }\r\n        this._tree.emit('move-pending', this._target, this._tree);\r\n        const parent = this._target.parentNode;\r\n        parent.insertBefore(this._indicator.get(), this._target);\r\n        const pos = utils.toGlobal(this._target);\r\n        document.body.appendChild(this._target);\r\n        this._old = {\r\n            opacity: this._target.style.opacity || 'unset',\r\n            position: this._target.style.position || 'unset',\r\n            boxShadow: this._target.querySelector(`.${this._tree.prefixClassName}-name`).style.boxShadow || 'unset'\r\n        };\r\n        this._target.style.position = 'absolute';\r\n        this._target.querySelector(`.${this._tree.prefixClassName}-name`).style.boxShadow = '3px 3px 5px rgba(0,0,0,0.25)';\r\n        this._target.style.left = pos.x + 'px';\r\n        this._target.style.top = pos.y + 'px';\r\n        this._target.style.opacity = this._tree.dragOpacity;\r\n        if (this._tree._getChildren(parent, true).length === 0) {\r\n            parent.hideIcon();\r\n        }\r\n    }\r\n\r\n    _findClosest(e, entry) {\r\n        const pos = utils.toGlobal(entry.querySelector(`.${this._tree.prefixClassName}-name`));\r\n        if (pos.y + entry.querySelector(`.${this._tree.prefixClassName}-name`).offsetHeight / 2 <= e.pageY) {\r\n            if (!this._closest.foundAbove) {\r\n                if (utils.inside(e.pageX, e.pageY, entry.querySelector(`.${this._tree.prefixClassName}-name`))) {\r\n                    this._closest.foundAbove = true;\r\n                    this._closest.above = entry;\r\n                } else {\r\n                    const distance = utils.distancePointElement(e.pageX, e.pageY, entry.querySelector(`.${this._tree.prefixClassName}-name`));\r\n                    if (distance < this._closest.distanceAbove) {\r\n                        this._closest.distanceAbove = distance;\r\n                        this._closest.above = entry;\r\n                    }\r\n                }\r\n            }\r\n        } else if (!this._closest.foundBelow) {\r\n            if (utils.inside(e.pageX, e.pageY, entry.querySelector(`.${this._tree.prefixClassName}-name`))) {\r\n                this._closest.foundBelow = true;\r\n                this._closest.below = entry;\r\n            } else {\r\n                const distance = utils.distancePointElement(e.pageX, e.pageY, entry.querySelector(`.${this._tree.prefixClassName}-name`));\r\n                if (distance < this._closest.distanceBelow) {\r\n                    this._closest.distanceBelow = distance;\r\n                    this._closest.below = entry;\r\n                }\r\n            }\r\n        }\r\n        for (let child of this._tree._getChildren(entry)) {\r\n            this._findClosest(e, child);\r\n        }\r\n    }\r\n\r\n    _move(e) {\r\n        if (this._target && this._checkThreshold(e)) {\r\n            const element = this._tree.element;\r\n            const indicator = this._indicator.get();\r\n            const indentation = this._tree.indentation;\r\n            indicator.remove();\r\n            this._target.style.left = e.pageX - this._offset.x + 'px';\r\n            this._target.style.top = e.pageY - this._offset.y + 'px';\r\n            const x = utils.toGlobal(this._target.querySelector(`.${this._tree.prefixClassName}-name`)).x;\r\n            this._closest = { distanceAbove: Infinity, distanceBelow: Infinity };\r\n            for (let child of this._tree._getChildren()) {\r\n                this._findClosest(e, child);\r\n            }\r\n            if (!this._closest.above && !this._closest.below) {\r\n                element.appendChild(indicator);\r\n            } else if (!this._closest.above)  {\r\n                // null [] leaf\r\n                element.insertBefore(indicator, this._tree._getFirstChild(element));\r\n            } else if (!this._closest.below) {\r\n                // leaf [] null\r\n                let pos = utils.toGlobal(this._closest.above.querySelector(`.${this._tree.prefixClassName}-name`));\r\n                if (x > pos.x + indentation) {\r\n                    this._closest.above.insertBefore(indicator, this._tree._getFirstChild(this._closest.above, true));\r\n                } else if (x > pos.x - indentation) {\r\n                    this._closest.above.parentNode.appendChild(indicator);\r\n                } else {\r\n                    let parent = this._closest.above;\r\n                    while (parent !== element && x < pos.x) {\r\n                        parent = this._tree._getParent(parent);\r\n                        if (parent !== element) {\r\n                            pos = utils.toGlobal(parent.querySelector(`.${this._tree.prefixClassName}-name`));\r\n                        }\r\n                    }\r\n                    parent.appendChild(indicator);\r\n                }\r\n            } else if (this._closest.below.parentNode === this._closest.above) {\r\n                // parent [] child\r\n                this._closest.above.insertBefore(indicator, this._closest.below);\r\n            } else if (this._closest.below.parentNode === this._closest.above.parentNode) {\r\n                // sibling [] sibling\r\n                const pos = utils.toGlobal(this._closest.above.querySelector(`.${this._tree.prefixClassName}-name`));\r\n                if (x > pos.x + indentation) {\r\n                    this._closest.above.insertBefore(indicator, this._tree._getLastChild(this._closest.above, true));\r\n                } else {\r\n                    this._closest.above.parentNode.insertBefore(indicator, this._closest.below);\r\n                }\r\n            } else {\r\n                // child [] parent^\r\n                let pos = utils.toGlobal(this._closest.above.querySelector(`.${this._tree.prefixClassName}-name`));\r\n                if (x > pos.x + indentation) {\r\n                    this._closest.above.insertBefore(indicator, this._tree._getLastChild(this._closest.above, true));\r\n                } else if (x > pos.x - indentation) {\r\n                    this._closest.above.parentNode.appendChild(indicator);\r\n                } else if (x < utils.toGlobal(this._closest.below.querySelector(`.${this._tree.prefixClassName}-name`)).x) {\r\n                    this._closest.below.parentNode.insertBefore(indicator, this._closest.below);\r\n                } else {\r\n                    let parent = this._closest.above;\r\n                    while (parent.parentNode !== this._closest.below.parentNode && x < pos.x) {\r\n                        parent = this._tree._getParent(parent);\r\n                        pos = utils.toGlobal(parent.querySelector(`.${this._tree.prefixClassName}-name`));\r\n                    }\r\n                    parent.appendChild(indicator);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _up(e) {\r\n        if (this._target) {\r\n            if (!this._moving) {\r\n                if (this._tree.expandOnClick && (!this._tree.select || this._isDown.alreadySelected)) {\r\n                    this._tree.toggleExpand(this._target);\r\n                }\r\n                this._tree.emit('clicked', this._target, e, this._tree);\r\n            } else {\r\n                const indicator = this._indicator.get();\r\n                indicator.parentNode.insertBefore(this._target, indicator);\r\n                this._tree.expand(indicator.parentNode);\r\n                const leafInstance = indicator.parentNode.__leafInstance;\r\n                if (leafInstance) {\r\n                    leafInstance.showIcon();\r\n                }\r\n                this._target.style.position = this._old.position === 'unset' ? '' : this._old.position;\r\n                this._target.querySelector(`.${this._tree.prefixClassName}-name`).style.boxShadow = this._old.boxShadow === 'unset' ? '' : this._old.boxShadow;\r\n                this._target.style.opacity = this._old.opacity === 'unset' ? '' : this._old.opacity;\r\n                indicator.remove();\r\n                this._moveData();\r\n                this._tree.emit('move', this._target, this._tree);\r\n                this._tree.emit('update', this._target, this._tree);\r\n            }\r\n            if (this._holdTimeout) {\r\n                window.clearTimeout(this._holdTimeout);\r\n                this._holdTimeout = null;\r\n            }\r\n            this._target = this._moving = null;\r\n            this._isDown = null;  // Reset _isDown\r\n        }\r\n    }\r\n\r\n    _moveData() {\r\n        this._target.data.parent.task.splice(this._target.data.parent.task.indexOf(this._target.data), 1);\r\n        this._target.parentNode.data.task.splice(utils.getChildIndex(this._target.parentNode, this._target), 0, this._target.data);\r\n        this._target.data.parent = this._target.parentNode.data;\r\n    }\r\n\r\n    _indicatorMarginLeft(value) {\r\n        this._indicator.marginLeft = value;\r\n    }\r\n}\r\n", "export const defaults = {\r\n    move: true,\r\n    select: true,\r\n    indentation: 20,\r\n    threshold: 10,\r\n    holdTime: 1000,\r\n    expandOnClick: false,\r\n    dragOpacity: 0.75,\r\n    prefixClassName: 'mb-task',\r\n    cursorName: 'grab -webkit-grab pointer',\r\n    cursorExpand: 'pointer',\r\n    edit: true, \r\n    symbols: {\r\n        oracles: '#',\r\n        tags: '@',\r\n        actions: '>'\r\n    }\r\n};\r\n", "'use strict';\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\");\r\n    }\r\n}\r\n\r\nvar _createClass = function () {\r\n    function defineProperties(target, props) {\r\n        for (var i = 0; i < props.length; i++) {\r\n            var descriptor = props[i];\r\n            descriptor.enumerable = descriptor.enumerable || false;\r\n            descriptor.configurable = true;\r\n            if (\"value\" in descriptor) descriptor.writable = true;\r\n            Object.defineProperty(target, descriptor.key, descriptor);\r\n        }\r\n    }\r\n\r\n    return function (Constructor, protoProps, staticProps) {\r\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\r\n        if (staticProps) defineProperties(Constructor, staticProps);\r\n        return Constructor;\r\n    };\r\n}();\r\n\r\nfunction clicked(element, callback, options = {}) {\r\n    return new Clicked(element, callback, options);\r\n}\r\n\r\nvar Clicked = function () {\r\n    function Clicked(element, callback, options) {\r\n        var _this = this;\r\n\r\n        _classCallCheck(this, Clicked);\r\n\r\n        this.options = options;\r\n        this.threshhold = this.options.threshhold || 10;\r\n        this.events = {\r\n            mouseclick: function mouseclick(e) {\r\n                return _this.mouseclick(e);\r\n            },\r\n            mousedblclick: function mousedblclick(e) {\r\n                return _this.mousedblclick(e);\r\n            },\r\n            touchstart: function touchstart(e) {\r\n                return _this.touchstart(e);\r\n            },\r\n            touchmove: function touchmove(e) {\r\n                return _this.touchmove(e);\r\n            },\r\n            touchcancel: function touchcancel(e) {\r\n                return _this.touchcancel(e);\r\n            },\r\n            touchend: function touchend(e) {\r\n                return _this.touchend(e);\r\n            }\r\n        };\r\n        element.addEventListener('click', this.events.mouseclick);\r\n        element.addEventListener('dblclick', this.events.mousedblclick);\r\n        element.addEventListener('touchstart', this.events.touchstart, { passive: true });\r\n        element.addEventListener('touchmove', this.events.touchmove, { passive: true });\r\n        element.addEventListener('touchcancel', this.events.touchcancel);\r\n        element.addEventListener('touchend', this.events.touchend);\r\n        this.element = element;\r\n        this.callback = callback;\r\n        this.doubleClickCallback = this.options.doubleClickCallback;\r\n    }\r\n\r\n    _createClass(Clicked, [{\r\n        key: 'destroy',\r\n        value: function destroy() {\r\n            this.element.removeEventListener('click', this.events.mouseclick);\r\n            this.element.removeEventListener('dblclick', this.events.mousedblclick);\r\n            this.element.removeEventListener('touchstart', this.events.touchstart);\r\n            this.element.removeEventListener('touchmove', this.events.touchmove);\r\n            this.element.removeEventListener('touchcancel', this.events.touchcancel);\r\n            this.element.removeEventListener('touchend', this.events.touchend);\r\n        }\r\n    }, {\r\n        key: 'touchstart',\r\n        value: function touchstart(e) {\r\n            if (e.touches.length === 1) {\r\n                this.lastX = e.changedTouches[0].screenX;\r\n                this.lastY = e.changedTouches[0].screenY;\r\n                this.down = true;\r\n            }\r\n        }\r\n    }, {\r\n        key: 'pastThreshhold',\r\n        value: function pastThreshhold(x, y) {\r\n            return Math.abs(this.lastX - x) > this.threshhold || Math.abs(this.lastY - y) > this.threshhold;\r\n        }\r\n    }, {\r\n        key: 'touchmove',\r\n        value: function touchmove(e) {\r\n            if (!this.down || e.touches.length !== 1) {\r\n                this.touchcancel();\r\n                return;\r\n            }\r\n            var x = e.changedTouches[0].screenX;\r\n            var y = e.changedTouches[0].screenY;\r\n            if (this.pastThreshhold(x, y)) {\r\n                this.touchcancel();\r\n            }\r\n        }\r\n    }, {\r\n        key: 'touchcancel',\r\n        value: function touchcancel() {\r\n            this.down = false;\r\n        }\r\n    }, {\r\n        key: 'touchend',\r\n        value: function touchend(e) {\r\n            if (this.down) {\r\n                e.preventDefault();\r\n                if (this.callback) {\r\n                    this.callback(e, this.options.args);\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: 'mouseclick',\r\n        value: function mouseclick(e) {\r\n            if (this.callback) {\r\n                this.callback(e, this.options.args);\r\n            }\r\n        }\r\n    }, {\r\n        key: 'mousedblclick',\r\n        value: function mousedblclick(e) {\r\n            if (this.doubleClickCallback) {\r\n                this.doubleClickCallback(e, this.options.args);\r\n            }\r\n        }\r\n    }]);\r\n\r\n    return Clicked;\r\n}();\r\n\r\nexport default clicked;\r\n", "'use strict';\r\n\r\nimport clicked from './clicked';\r\nimport * as utils from './utils';\r\n\r\nexport class Leaf {\r\n    constructor(data, level, tree) {\r\n        this.data = data;\r\n        this.tree = tree;\r\n        this.level = level;\r\n        this.element = utils.html({ className: `${tree.prefixClassName}-leaf` });\r\n        this.element.isLeaf = true;\r\n        this.element.__leafInstance = this;\r\n        this.element.data = data;\r\n        this.element.content = utils.html({ parent: this.element, className: `${tree.prefixClassName}-content` });\r\n        this.element.style.marginLeft = `${tree.indentation}px`;\r\n        const iconClass = `${tree.prefixClassName}-expand${data.expanded ? ' expanded' : ''}`;\r\n        this.element.icon = utils.html({\r\n            parent: this.element.content,\r\n            className: iconClass.trim()\r\n        });\r\n        this.element.name = utils.html({ parent: this.element.content, html: data.name, className: `${tree.prefixClassName}-name` });\r\n\r\n        // Add a handler for dragging\r\n        this.element.handler = utils.html({ parent: this.element.content, className: `${tree.prefixClassName}-leaf-handler` });\r\n        this.element.handler.addEventListener('mousedown', e => tree._input._down(e));\r\n        this.element.handler.addEventListener('touchstart', e => tree._input._down(e));\r\n\r\n        // Handle selection on the leaf\r\n        this.element.name.addEventListener('mousedown', e => {\r\n            tree._input._down(e);\r\n            this.selectLeaf();\r\n        });\r\n        this.element.name.addEventListener('touchstart', e => {\r\n            tree._input._down(e);\r\n            this.selectLeaf();\r\n        });\r\n\r\n        // Use clicked to handle single-click for selection and double-click for updating task area\r\n        clicked(this.element.name, () => {}, {\r\n            doubleClickCallback: () => {\r\n                if (tree.taskEditor && typeof tree.taskEditor.editTask === 'function') {\r\n                    tree.taskEditor.editTask(this);\r\n                } else {\r\n                    console.error('editTask method not found in taskEditor');\r\n                }\r\n            }\r\n        });\r\n\r\n        // Ensure the task property is always an array\r\n        data.task = data.task || [];\r\n        for (let child of data.task) {\r\n            const add = new Leaf(child, level + 1, tree);\r\n            add.data.parent = data;\r\n            this.element.appendChild(add.element);\r\n            if (!data.expanded) {\r\n                add.element.style.display = 'none';\r\n            }\r\n        }\r\n        if (this.getChildren(true).length === 0) {\r\n            this.hideIcon();\r\n        }\r\n        this.element.icon.addEventListener('click', () => tree.toggleExpand(this.element));\r\n        tree.emit('render', this.element, tree);\r\n    }\r\n\r\n    getChildren(all) {\r\n        const children = [];\r\n        for (let child of this.element.children) {\r\n            if (child.isLeaf && (all || child.style.display !== 'none')) {\r\n                children.push(child);\r\n            }\r\n        }\r\n        return children;\r\n    }\r\n\r\n    hideIcon() {\r\n        if (this.element.isLeaf) {\r\n            this.element.icon.classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    showIcon() {\r\n        if (this.element.isLeaf) { \r\n            this.element.icon.classList.remove('hidden');\r\n        }\r\n    }\r\n\r\n    selectLeaf() {\r\n        const selectedLeaf = document.querySelector(`.${this.tree.prefixClassName}-leaf-select`);\r\n        if (selectedLeaf) {\r\n            selectedLeaf.classList.remove(`${this.tree.prefixClassName}-leaf-select`);\r\n        }\r\n        this.element.classList.add(`${this.tree.prefixClassName}-leaf-select`);\r\n    }\r\n}\r\n", "'use strict';\r\n\r\nimport * as utils from './utils';\r\n\r\nexport class TaskEditor {\r\n    constructor(tree) {\r\n        this.tree = tree;\r\n        this.currentTask = null;\r\n        this.taskArea = document.getElementById('taskarea');\r\n        this.createTaskBtn = document.getElementById('createTaskBtn');\r\n        this.editTaskBtn = document.getElementById('editTaskBtn');\r\n        this.placeholderText = this.taskArea.getAttribute('data-placeholder');\r\n\r\n        this.createTaskBtn.addEventListener('click', () => this.createTask());\r\n        this.editTaskBtn.addEventListener('click', () => this.updateTask());\r\n        this.taskArea.addEventListener('input', () => this.onTaskAreaInput());\r\n\r\n        this.setupPlaceholder();\r\n    }\r\n\r\n    setupPlaceholder() {\r\n        const setPlaceholder = () => {\r\n            if (this.taskArea.innerText.trim() === '') {\r\n                this.taskArea.innerText = this.placeholderText;\r\n                this.taskArea.classList.add('placeholder');\r\n            }\r\n        };\r\n\r\n        const removePlaceholder = () => {\r\n            if (this.taskArea.innerText === this.placeholderText) {\r\n                this.taskArea.innerText = '';\r\n                this.taskArea.classList.remove('placeholder');\r\n            }\r\n        };\r\n\r\n        this.taskArea.addEventListener('focus', removePlaceholder);\r\n        this.taskArea.addEventListener('blur', setPlaceholder);\r\n\r\n        setPlaceholder(); // Initial call to set the placeholder\r\n    }\r\n\r\n    createTask() {\r\n        const taskName = this.taskArea.innerText.trim();\r\n        if (taskName && taskName !== this.placeholderText) {\r\n            const selectedLeaf = document.querySelector(`.${this.tree.prefixClassName}-leaf-select`);\r\n            const newTask = { name: taskName, task: [] };\r\n\r\n            if (selectedLeaf) {\r\n                const selectedLeafInstance = selectedLeaf.__leafInstance;\r\n                if (selectedLeafInstance && selectedLeafInstance.data) {\r\n                    const parentTask = selectedLeafInstance.data.parent;\r\n                    if (parentTask) {\r\n                        const siblingIndex = parentTask.task.indexOf(selectedLeafInstance.data);\r\n                        parentTask.task.splice(siblingIndex + 1, 0, newTask);\r\n                    } else {\r\n                        console.error('Parent task not found for the selected leaf');\r\n                    }\r\n                } else {\r\n                    console.error('Selected leaf instance or its data is not defined');\r\n                }\r\n            } else {\r\n                if (this.tree.element.data && this.tree.element.data.task) {\r\n                    this.tree.element.data.task.push(newTask);\r\n                } else {\r\n                    console.error('Tree data or tree data task array is not defined');\r\n                }\r\n            }\r\n\r\n            this.tree.update();\r\n            this.resetTaskArea();\r\n        }\r\n    }\r\n\r\n    updateTask() {\r\n        if (this.currentTask) {\r\n            this.currentTask.data.name = this.taskArea.innerText.trim();\r\n            this.tree.update();\r\n            this.resetTaskArea();\r\n        }\r\n    }\r\n\r\n    onTaskAreaInput() {\r\n        const taskName = this.taskArea.innerText.trim();\r\n        if (this.currentTask && taskName && taskName !== this.placeholderText) {\r\n            this.editTaskBtn.classList.remove('hidden');\r\n            this.createTaskBtn.classList.add('hidden');\r\n        } else {\r\n            this.editTaskBtn.classList.add('hidden');\r\n            this.createTaskBtn.classList.remove('hidden');\r\n        }\r\n    }\r\n\r\n    resetTaskArea() {\r\n        this.taskArea.innerText = '';\r\n        this.taskArea.blur(); // Triggers the placeholder to be set\r\n        this.editTaskBtn.classList.add('hidden');\r\n        this.createTaskBtn.classList.remove('hidden');\r\n        this.currentTask = null;\r\n    }\r\n\r\n    editTask(leaf) {\r\n        this.currentTask = leaf;\r\n        this.taskArea.innerText = leaf.data.name;\r\n        this.editTaskBtn.classList.remove('hidden');\r\n        this.createTaskBtn.classList.add('hidden');\r\n        this.taskArea.focus();\r\n    }\r\n}\r\n", "import { Tree } from './tree';\r\nimport { TaskEditor } from './editor';\r\n\r\nfunction initializeTree() {\r\n    const tasks = window.tasks;\r\n    const tree = new Tree(tasks, { parent: document.getElementById('tasktree') });\r\n    tree.expandAll();\r\n    window.taskEditor = new TaskEditor(tree); // Ensure taskEditor is assigned to the tree instance\r\n    tree.taskEditor = window.taskEditor;\r\n}\r\n\r\nwindow.onload = function () {\r\n    initializeTree();\r\n};\r\n"],
  "mappings": "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",
  "names": ["Events", "options", "defaults", "options", "distance", "options", "Clicked", "Events", "options"]
}
